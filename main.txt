DynamodbTable:  RoomAvalability

RoomType (String)
	
Date (String)
	
AvailableRooms (int)
	
Price (int)

DynamodbTable: Bookings

BookingId (String)
	
Date (String)
	
CustomerName
	
RoomType
	
Status

*************************************************************input******************************
{
  "messageVersion": "1.0",
  "parameters": [
    {
      "name": "date",
      "type": "string",
      "value": "2025-05-01"
    }
  ],
  "sessionAttributes": {},
  "promptSessionAttributes": {},
  "inputText": "how many Single room on date 2025-05-01 available and my name is samim",
  "sessionId": "651706775874469",
  "agent": {
    "name": "agent1",
    "version": "DRAFT",
    "id": "6DBPVDBL6D",
    "alias": "TSTALIASID"
  },
  "actionGroup": "action-group1",
  "httpMethod": "GET",
  "apiPath": "/rooms"
}

**********************************************************************************************************

https://docs.aws.amazon.com/bedrock/latest/userguide/agents-lambda.html    

def lambda_handler(event, context):

    agent = event['agent']
    actionGroup = event['actionGroup']
    api_path = event['apiPath']
    # get parameters
    get_parameters = event.get('parameters', [])
    # post parameters
    post_parameters = event['requestBody']['content']['application/json']['properties']

    response_body = {
        'application/json': {
            'body': "sample response"
        }
    }
    
    action_response = {
        'actionGroup': event['actionGroup'],
        'apiPath': event['apiPath'],
        'httpMethod': event['httpMethod'],
        'httpStatusCode': 200,
        'responseBody': response_body
    }
    
    session_attributes = event['sessionAttributes']
    prompt_session_attributes = event['promptSessionAttributes']
    
    api_response = {
        'messageVersion': '1.0', 
        'response': action_response,
        'sessionAttributes': session_attributes,
        'promptSessionAttributes': prompt_session_attributes
    }
        
    return api_response
************************************************************************************************************
The final response back to Bedrock agent.
***************************************************************************************************************

{
  "messageVersion": "1.0",
  "response": {
    "actionGroup": "action-group1",
    "apiPath": "/rooms",
    "httpMethod": "GET",
    "httpStatusCode": 200,
    "responseBody": {
      "application/json": {
        "body": "[{\"roomType\": \"Single\", \"date\": \"2025-05-01\", \"availableRooms\": 9, \"price\": 1000.0}, {\"roomType\": \"Double\", \"date\": \"2025-05-01\", \"availableRooms\": 0, \"price\": 0.0}, {\"roomType\": \"Suite\", \"date\": \"2025-05-01\", \"availableRooms\": 0, \"price\": 0.0}]"
      }
    },
    "sessionAttributes": {},
    "promptSessionAttributes": {}
  }
}

******************************************************************************************************************************
Bedrock agent sent to Booking Lambda Function
******************************************************************************************************************************

{
  "parameters": [],
  "messageVersion": "1.0",
  "sessionId": "651706775874232",
  "agent": {
    "name": "agent1",
    "version": "DRAFT",
    "id": "6DBPVDBL6D",
    "alias": "TSTALIASID"
  },
  "actionGroup": "action-group2",
  "sessionAttributes": {},
  "promptSessionAttributes": {},
  "inputText": "pls book Single room date on 2025-05-01. my name is Raju.",
  "httpMethod": "POST",
  "apiPath": "/bookings",
  "requestBody": {
    "content": {
      "application/json": {
        "properties": [
          {
            "name": "customerName",
            "type": "string",
            "value": "Raju"
          },
          {
            "name": "date",
            "type": "string",
            "value": "2025-05-01"
          },
          {
            "name": "roomType",
            "type": "string",
            "value": "Single"
          }
        ]
      }
    }
  }
}

************************************************************************************************************************************************
response to bedrock agent by lambda function Bookings
***********************************************************************************************************************************************

{
  "messageVersion": "1.0",
  "response": {
    "actionGroup": "action-group2",
    "apiPath": "/bookings",
    "httpMethod": "POST",
    "httpStatusCode": 200,
    "responseBody": {
      "application/json": {
        "body": "\"82c96729-f5d2-46ce-b2f5-078b2e1fa31d\""
      }
    }
  },
  "sessionAttributes": {},
  "promptSessionAttributes": {}
}

*********************************************************************************************************************************************
Instruction
**********************************************************************************************************************************************
The AWS Bedrock agent assists users in booking hotel rooms by accepting a date (YYYY-MM-DD), querying a RAG knowledge base for hotel details, and invoking Lambda functions to check room availability and book rooms. It responds in a professional, concise tone, guiding users step-by-step. If rooms are available, it prompts for the user's name and confirms bookings with details. Handle invalid inputs by requesting clarification and log all interactions for debugging.
**********************************************************************************************************************************************


